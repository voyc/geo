custom layers for storytelling
	Choke point
	funnel
	Threshold
	Pressure point
	Nexus, Knot
	Single lifespan empire
	CEO
	Geographic, chronological, cultural
	Continents, canals, passages

isms
	cracy and archy
	categorical thinking
	government, economics, religious, technology, cultural?

beliefs
	the chosen people vs original sin

flash
	greek alphabet
	uses in mathematics, pi, epsilon, etc
	cgi, electronics, calculus, physics 
	chart of big vs little
	order: pi, alpha, omega,
 
base layers
	deserts   
	highmountains  
	lowmountains   
	mediummountains  
	empire    
	worldtopo  : 2 objects, land and countries

rivers
	some need reversal
	some need editing
	find lakes to fill gaps
	identify scales, use single dataset, qualified by scale

more terrain
	plateaux  #ff9
	swamps    #0f0, 3 records
	foothills #3c3, 3 features
	valleys   #0f0, 6 features
	plains    #0f0
	tundras   #ffe6ff, 4 features
	seas,  lists and notes, no data
	cities   two dozen historical city names and some notes
	countrynames  name and id only
	treasure

plunder features not implemented
	hero
	hittest

svg tips
	too slow
	use to scale image, save a bitmap for runtime use

canvas tips
	https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas
	rgba is slow, use only when necessary
	keep layers separate
		for independent show/hide
		setup ctx ahead of time, not at draw time
		while it is tempting to put multiple datatypes on one layer 
		this may change for scaling

Mercator stitch
	during iteratee project for polygon object
	objects going across the antimeridian project normally
	objects going across the left (or right) edge must be duplicated
		project one onto the right edge
		project the other onto the left edge 
	project() is called by the iterator
	the iterator does the ctx fill() and stroke() commands
	thererfore, the data need not be modified, it can all be handled during drawing
		project() must return null when a point is off screen
		drawer must split the object on all gaps of null points
		or
		drawer must note when a line crosses the boundary

Latitude Flip
	in our data, E and N are positive
	in our projection code, E and S are positive

GeoIterator

4 looping methods, hierarchical
	iterateCollection
		iterateGeometry
			iteratePolygon
				doPolyPoint
			iterateLine
				doLinePoint
			doPoint

before and after overrideables
	collectionStart()
	collectionEnd()
	geometryStart()
	geometryEnd()
	polygonStart()
	polygonEnd()
	lineStart()
	lineEnd()
	point()

Plunder iteratee system has 7 sub classes, ie 7 prototype objects
	iterateePolygonClipping
	iterateeInit
	iterateeDrawPerGeometry
	iterateeLineSVG
	iterateeCounter
	iterateeHitTest
	iterateeHitTestPoint

palette of drawing tools

pencil
point
line
polygon
finish/name
multi

after resize, recalc the point overlap threshold as percentage of diagonal distance of container div
	width by height, a2 + b2 = c2, root of sum of the squares
	gives length of diagonal
	one point is identical to another
	when points are overlaid, is it the same point or a different one?
	1% of the diagonal
	100 x 100, diagonal=130, 1%=1.3
	1000 x 1000, diagonal=1300, 1%=13
	!! dont bother with this now

save sketch to layer
	replace sketch addPoint(pt) with addCoord(co), call invert() from Hud (or sketch?)
	in sketch draw(), call project() for each point

rename geo:geo, sketchpad:sketch
	rename repository
	recreate subdomain
	keep two files named sketch: one in jslib, one in geo, or rename one of them to draw or pad
	what about letting the future of voyc dovetail into geo, global
	geo.voyc.com
	global.voyc.com - to be folded into geo
	let geo be the authoring tool for global and plunder
	rename geo to GeoMath or GeoLib

UI: world vs sketch vs plunder
	plunder: you move the character, directions are relative to him
	world: you drag the land, directions are relative to him

sketch
	mouse (left btn)
	
spin (pan)j
	keybd (arrow keys, shift for gamma spin)
	mouse (middle btn)

zoom
	keybd (shift + up,down arrow keys)
	mouse wheel
	button
	slider

time
	keybd (ctrl + right,left arrow keys)
	button
	slider
















main menu
	about, help
	user:  menu
	settings: form
	projection: globe, cyclindrical, mercatur
	ruler tool
	search

palette per layer
	tool: points, line, polygon
	outline: size, dotted arrow, color
	fill: color(s), custom, multiselect, customs replace primaries
	fill pattern for terrain
	dot medallion for points
	(palettes saved per user)

layer menu
	show/hide
	edit
	show/hide labels
	edit palette

palette for coordinates editing
	finish: Fill, Mask (land only)
	Properties: name, begin, end, scale, population
	Save, cancel, delete (keep, erase, save

select object for editing from map
select object for editing from columnar display of names and properties
save palette for each object, giant populations

undo
redo
text
clipart

save palette in collection properties
or
save palette in geometry



adaptive resampling for river animation
	make a GeoIteratorResample
		add a return value to iterateCollection 
		build a collection object
		return it
	remove points that are too close
	insert points where there is too long a distance
	normalize distance between points
	keep original for maximum accuracy
	how does simplification work?  keeping the more extreme points
	what is the optimal distance?
	what is the optimal number of offsets?


.  add points to make distances constant. OR skip close points

